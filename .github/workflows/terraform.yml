name: Terraform CI/CD

# This workflow formats, initializes, validates, plans and optionally applies 
# the Terraform configuration whenever the user pushes changes.  It uses
# GitHub secrets for AWS credentials and requires manual approval
# before applying to production.

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

env:
  TF_VERSION: 1.6.0
  AWS_REGION: ${{ secrets.AWS_REGION }}
  TF_WORKING_DIR: ./terraform

jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Run Checkov Security Scan
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ${{ env.TF_WORKING_DIR }}
          framework: terraform
          soft_fail: true

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        env:
          TF_VAR_alert_email: ${{ secrets.TF_VAR_ALERT_EMAIL }}
          TF_VAR_key_name: ${{ secrets.TF_VAR_KEY_NAME }}
        continue-on-error: true

      - name: Upload plan as artifact (PRs only)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ${{ env.TF_WORKING_DIR }}/plan.out

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
        env:
          TF_IN_AUTOMATION: true
          TF_VAR_key_name: ${{ secrets.TF_VAR_KEY_NAME }}
          TF_VAR_alert_email: ${{ secrets.TF_VAR_ALERT_EMAIL }}

      - name: Post plan status
        if: steps.plan.outcome == 'failure'
        run: |
          echo "Terraform plan failed"
          exit 1
